name: CI/CD for Spring Boot + MySQL with Docker Compose

on:
  push:
    branches: [ "main" ]

env:
  DOCKER_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/${{vars.DOCKER_IMAGE_NAME}}:latest
  EC2_HOST: ${{ secrets.EC2_HOST }}
  EC2_SSH_USER: ec2-user
  PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
  TIMEZONE: Asia/Seoul
  DOCKER_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKER_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
  APPLICATION: ${{ secrets.APPLICATION }} # This should be a base64 encoded string of your application.properties

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Build Spring Boot Application
      run: ./gradlew build

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build Docker Image
      run: docker build -t ${{env.DOCKER_IMAGE}} .

    - name: Push Docker Image
      run: docker push ${{env.DOCKER_IMAGE}}

    - name: Deploy to EC2 via SSH
      uses: appleboy/ssh-action@v0.1.6
      with:
        host: ${{ env.EC2_HOST }}
        username: ${{ env.EC2_SSH_USER }}
        key: ${{ env.PRIVATE_KEY }}
        script: |
          cd /home/ec2-user/cicd_test
          docker compose pull
          docker compose down
          docker compose up -d
