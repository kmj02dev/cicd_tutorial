name: Deploy to AWS EC2 using Docker

on:
  push:
    branches: ["main"]

env:
  DOCKER_IMAGE: ${{ secrets.DOCKER_USERNAME }}/your-image-name
  CONTAINER_NAME: your-container-name
  EC2_HOST: ${{ secrets.EC2_HOST }}
  EC2_SSH_USER: ec2-user
  PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
  TIMEZONE: Asia/Seoul
  HOST_PORT: 80
  CONTAINER_PORT: 8080

jobs:
  build-and-push-docker:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout source code
      uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Set up application.properties
      run: echo "${{ secrets.APPLICATION }}" > ./src/main/resources/application.properties

    - name: Build JAR with Gradle
      run: ./gradlew build

    - name: Build Docker image
      run: docker build . -t ${{ env.DOCKER_IMAGE }}:latest

    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKER_TOKEN }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Push Docker image
      run: docker push ${{ env.DOCKER_IMAGE }}:latest

  deploy-to-ec2:
    needs: build-and-push-docker
    runs-on: ubuntu-latest

    steps:
    - name: Deploy on EC2
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ env.EC2_HOST }}
        username: ${{ env.EC2_SSH_USER }}
        key: ${{ env.PRIVATE_KEY }}
        script: |
          echo "ðŸ›‘ Stopping existing container if running..."
          CONTAINER_ID=$(sudo docker ps -q --filter "name=${{ env.CONTAINER_NAME }}")
          if [ ! -z "$CONTAINER_ID" ]; then
            sudo docker stop $CONTAINER_ID
            sudo docker rm $CONTAINER_ID
          fi

          echo "ðŸ“¦ Pulling new image..."
          sudo docker pull ${{ env.DOCKER_IMAGE }}:latest

          echo "ðŸš€ Running new container..."
          sudo docker run -d \
            --name ${{ env.CONTAINER_NAME }} \
            -p ${{ env.HOST_PORT }}:${{ env.CONTAINER_PORT }} \
            -e TZ=${{ env.TIMEZONE }} \
            ${{ env.DOCKER_IMAGE }}:latest
